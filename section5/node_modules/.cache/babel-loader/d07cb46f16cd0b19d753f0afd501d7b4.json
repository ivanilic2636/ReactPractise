{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Messagio\\\\Desktop\\\\ReactJS\\\\section5\\\\src\\\\components\\\\Expenses\\\\ExpensesChart.js\";\nimport React from \"react\";\nimport Chart from \"../Chart/Chart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ExpensesChart(props) {\n  let chartDataPoints = [{\n    label: \"Jan\",\n    value: 0\n  }, {\n    label: \"Feb\",\n    value: 0\n  }, {\n    label: \"Mar\",\n    value: 0\n  }, {\n    label: \"Apr\",\n    value: 0\n  }, {\n    label: \"May\",\n    value: 0\n  }, {\n    label: \"Jun\",\n    value: 0\n  }, {\n    label: \"Jul\",\n    value: 0\n  }, {\n    label: \"Aug\",\n    value: 0\n  }, {\n    label: \"Sep\",\n    value: 0\n  }, {\n    label: \"Oct\",\n    value: 0\n  }, {\n    label: \"Nov\",\n    value: 0\n  }, {\n    label: \"Dec\",\n    value: 0\n  }];\n  console.log(props.expenses);\n  props.expenses.forEach(element => {\n    console.log(element);\n  });\n\n  for (let expense in props.expenses) {\n    console.log(expense.amount);\n    let expenseMonth = new Date(expense.date).getMonth();\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    dataPoints: chartDataPoints\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 10\n  }, this);\n}\n\n_c = ExpensesChart;\nexport default ExpensesChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpensesChart\");","map":{"version":3,"sources":["C:/Users/Messagio/Desktop/ReactJS/section5/src/components/Expenses/ExpensesChart.js"],"names":["React","Chart","ExpensesChart","props","chartDataPoints","label","value","console","log","expenses","forEach","element","expense","amount","expenseMonth","Date","date","getMonth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,MAAIC,eAAe,GAAG,CACpB;AAAEC,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GADoB,EAEpB;AAAED,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GAFoB,EAGpB;AAAED,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GAHoB,EAIpB;AAAED,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GAJoB,EAKpB;AAAED,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GALoB,EAMpB;AAAED,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GANoB,EAOpB;AAAED,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GAPoB,EAQpB;AAAED,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GARoB,EASpB;AAAED,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GAToB,EAUpB;AAAED,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GAVoB,EAWpB;AAAED,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GAXoB,EAYpB;AAAED,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GAZoB,CAAtB;AAcAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACM,QAAlB;AACFN,EAAAA,KAAK,CAACM,QAAN,CAAeC,OAAf,CAAuBC,OAAO,IAAI;AAC9BJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,OAAZ;AACH,GAFD;;AAGE,OAAK,IAAIC,OAAT,IAAoBT,KAAK,CAACM,QAA1B,EAAoC;AAChCF,IAAAA,OAAO,CAACC,GAAR,CAAYI,OAAO,CAACC,MAApB;AACA,QAAIC,YAAY,GAAG,IAAIC,IAAJ,CAASH,OAAO,CAACI,IAAjB,EAAuBC,QAAvB,EAAnB;AACFb,IAAAA,eAAe,CAACU,YAAD,CAAf,CAA8BR,KAA9B,IAAuCM,OAAO,CAACC,MAA/C;AACD;;AACD,sBAAO,QAAC,KAAD;AAAO,IAAA,UAAU,EAAET;AAAnB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;KAzBQF,a;AA2BT,eAAeA,aAAf","sourcesContent":["import React from \"react\";\r\nimport Chart from \"../Chart/Chart\";\r\n\r\nfunction ExpensesChart(props) {\r\n  let chartDataPoints = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n  ];\r\n  console.log(props.expenses);\r\nprops.expenses.forEach(element => {\r\n    console.log(element)\r\n});\r\n  for (let expense in props.expenses) {\r\n      console.log(expense.amount);\r\n      let expenseMonth = new Date(expense.date).getMonth();\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n  return <Chart dataPoints={chartDataPoints}/>;\r\n}\r\n\r\nexport default ExpensesChart;\r\n"]},"metadata":{},"sourceType":"module"}