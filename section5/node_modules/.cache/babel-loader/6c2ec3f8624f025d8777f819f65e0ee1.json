{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Messagio\\\\Desktop\\\\ReactJS\\\\section5\\\\src\\\\components\\\\Expenses\\\\Expenses.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Card from \"../UI/Card\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport \"./Expenses.css\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Expenses(props) {\n  _s();\n\n  let [filteredYear, setFilteredYear] = useState(\"2020\");\n\n  const changeFilterHandler = selectedYear => {\n    setFilteredYear(selectedYear);\n    console.log(selectedYear);\n  };\n\n  const filteredExpenses = props.item.filter(expense => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  let expensesContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No expenses found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 25\n  }, this);\n\n  if (filteredExpenses.length > 0) {\n    expensesContent = filteredExpenses.map(filterExpense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: filterExpense.title,\n      amount: filterExpense.amount,\n      date: filterExpense.date\n    }, filterExpense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expenses\",\n    children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n      onChangeFilter: changeFilterHandler,\n      selected: filteredYear\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), filteredExpenses.length === 0 && expensesContent, filteredExpenses.length > 0 && expensesContent]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Expenses, \"N/aF5O1Q1Yumn7zBaSWVzvWGO2A=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["C:/Users/Messagio/Desktop/ReactJS/section5/src/components/Expenses/Expenses.js"],"names":["React","useState","Card","ExpenseItem","ExpensesFilter","Expenses","props","filteredYear","setFilteredYear","changeFilterHandler","selectedYear","console","log","filteredExpenses","item","filter","expense","date","getFullYear","toString","expensesContent","length","map","filterExpense","title","amount","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,gBAAP;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACvB,MAAI,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,MAAD,CAA9C;;AAEA,QAAMQ,mBAAmB,GAAIC,YAAD,IAAkB;AAC5CF,IAAAA,eAAe,CAACE,YAAD,CAAf;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;AACD,GAHD;;AAKA,QAAMG,gBAAgB,GAAGP,KAAK,CAACQ,IAAN,CAAWC,MAAX,CAAkBC,OAAO,IAAI;AACpD,WAAOA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,OAA0CZ,YAAjD;AACD,GAFwB,CAAzB;;AAIA,MAAIa,eAAe,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAtB;;AAEA,MAAGP,gBAAgB,CAACQ,MAAjB,GAA0B,CAA7B,EAA+B;AAC7BD,IAAAA,eAAe,GAAGP,gBAAgB,CAACS,GAAjB,CAAqBC,aAAa,iBAClD,QAAC,WAAD;AAEA,MAAA,KAAK,EAAEA,aAAa,CAACC,KAFrB;AAGA,MAAA,MAAM,EAAED,aAAa,CAACE,MAHtB;AAIA,MAAA,IAAI,EAAEF,aAAa,CAACN;AAJpB,OACKM,aAAa,CAACG,EADnB;AAAA;AAAA;AAAA;AAAA,YADgB,CAAlB;AAQD;;AAED,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA,4BACE,QAAC,cAAD;AACE,MAAA,cAAc,EAAEjB,mBADlB;AAEE,MAAA,QAAQ,EAAEF;AAFZ;AAAA;AAAA;AAAA;AAAA,YADF,EAKGM,gBAAgB,CAACQ,MAAjB,KAA4B,CAA5B,IAAiCD,eALpC,EAOIP,gBAAgB,CAACQ,MAAjB,GAA0B,CAA1B,IAA+BD,eAPnC;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GA5CQf,Q;;KAAAA,Q;AA8CT,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport \"./Expenses.css\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\n\r\nfunction Expenses(props) {\r\n  let [filteredYear, setFilteredYear] = useState(\"2020\");\r\n\r\n  const changeFilterHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n    console.log(selectedYear)\r\n  };\r\n\r\n  const filteredExpenses = props.item.filter(expense => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  })\r\n\r\n  let expensesContent = <p>No expenses found</p>\r\n\r\n  if(filteredExpenses.length > 0){\r\n    expensesContent = filteredExpenses.map(filterExpense => (\r\n      <ExpenseItem\r\n      key={filterExpense.id}\r\n      title={filterExpense.title}\r\n      amount={filterExpense.amount}\r\n      date={filterExpense.date}\r\n    />\r\n   ))\r\n  }\r\n\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpensesFilter\r\n        onChangeFilter={changeFilterHandler}\r\n        selected={filteredYear}\r\n      />\r\n      {filteredExpenses.length === 0 && expensesContent}\r\n\r\n      { filteredExpenses.length > 0 && expensesContent}\r\n      {/* {props.item.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))} */}\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Expenses;\r\n"]},"metadata":{},"sourceType":"module"}